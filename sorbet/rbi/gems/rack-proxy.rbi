# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/rack-proxy/all/rack-proxy.rbi
#
# rack-proxy-0.7.0

class Net::HTTP < Net::Protocol
  def begin_request_hacked(req); end
  def end_request_hacked; end
end
class Net::HTTPResponse
  def begin_reading_body_hacked(sock, reqmethodallowbody); end
  def end_reading_body_hacked; end
end
module Rack
end
class Rack::HttpStreamingResponse
  def body; end
  def code; end
  def each(&block); end
  def headers; end
  def initialize(request, host, port = nil); end
  def read_timeout; end
  def read_timeout=(arg0); end
  def response; end
  def session; end
  def ssl_version; end
  def ssl_version=(arg0); end
  def status; end
  def to_s; end
  def use_ssl; end
  def use_ssl=(arg0); end
  def verify_mode; end
  def verify_mode=(arg0); end
end
class Rack::Proxy
  def call(env); end
  def initialize(app = nil, opts = nil); end
  def perform_request(env); end
  def rewrite_env(env); end
  def rewrite_response(triplet); end
  def self.extract_http_request_headers(env); end
  def self.normalize_headers(headers); end
  def self.reconstruct_header_name(name); end
end
